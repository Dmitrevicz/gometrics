syntax = "proto3";

import "google/protobuf/empty.proto";

package grpc;

option go_package = "github.com/Dmitrevicz/gometrics/internal/server/grpc/proto";

message Metric {
  string id = 1;    // имя метрики
  // string type = 2;  // параметр, принимающий значение gauge или counter
  MetricType type = 2;  // параметр, принимающий значение gauge или counter
  optional int64 delta = 3;  // значение метрики в случае передачи counter
  optional double value = 4; // значение метрики в случае передачи gauge
}

enum MetricType {
  METRIC_TYPE_UNSPECIFIED = 0;
  COUNTER = 1;
  GAUGE = 2;
}

// message MetricsList {
//   repeated Metric metrics = 1;
// }

message GetMetricRequest {
  // Metric metric = 1;
  string id = 1;       // имя метрики
  MetricType type = 2; // параметр, принимающий значение gauge или counter
}

message GetMetricResponse {
  Metric metric = 1;
  string error = 2;
}

message UpdateBatchRequest {
  repeated Metric metrics = 1;
}

message UpdateBatchResponse {
  string error = 1;
}

message PingResponse {
  string error = 1;
}

service Metrics {
  // rpc GetValue(Metric) returns (Metric);
  rpc GetValue(GetMetricRequest) returns (GetMetricResponse);
  rpc Update(Metric) returns (Metric);
  rpc UpdateBatch(UpdateBatchRequest) returns (UpdateBatchResponse);

  // should I use Empty or define custom PingRequest message?
  rpc Ping(google.protobuf.Empty) returns (PingResponse);
}
